{
  "name": "sheet",
  "version": "0.0.1",
  "description": "CSS Compiler with source maps.",
  "keywords": [
    "css",
    "stylesheet",
    "compiler",
    "source map"
  ],
  "homepage": "https://github.com/fgnass/sheet",
  "bugs": {
    "url": "https://github.com/fgnass/sheet/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/fgnass/sheet"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha --require should"
  },
  "devDependencies": {
    "css-parse": "~1.5.0",
    "should": "~1.2.2",
    "mocha": "~1.11.0"
  },
  "main": "index",
  "dependencies": {
    "source-map": "~0.1.25"
  },
  "license": "MIT",
  "readme": "# sheet [![Build Status](https://travis-ci.org/fgnass/sheet.png)](https://travis-ci.org/fgnass/sheet)\n\nCSS compiler with built-in source map support. Generates CSS from an AST like\nthe one provided by [css-parse](https://github.com/visionmedia/css-parse) (if\nyou use that particular module, make sure to turn its `position` option on,\nand to pass in the `source`).\n\n## Usage\n\n```js\nvar sheet = require('sheet')\nvar ast = { stylesheet: { rules: [] }}\nvar s = sheet(ast, { compress: true, map: true, file: 'foo.css' })\nconsole.log(s.css)\nconsole.log(s.map)\n```\n\n`sheet(ast, [options])` returns:\n\n```js\n{\n  css: css,\n  map: sourceMap.toString(),\n  sourceMap: sourceMap,\n  toString: function() {\n    return css\n  }\n}\n```\n\n## Options\n\n- `indent`: The indentation to use. Default: Two spaces.\n- `compress`: Skip comments and whitespace. Default: Off.\n- `map`: Create source map. Default: Off.\n- `file`: The name of the file that you will store the generated CSS in, which\n  will be associated with the source map. Default: \"?\".\n- `sourceMappingURL`: The url to put in the `# sourceMappingURL=` comment.\n  Default: `file + '.map'`. Pass `false` to omit the comment.\n- `sourceRoot`: The optional root for all relative source URLs in the source\n  map.\n\n## The MIT License (MIT)\n\nCopyright (c) 2013 Felix Gnass\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "sheet@0.0.1",
  "dist": {
    "shasum": "592253d91d207ca6ea23512323019fb2a245f607"
  },
  "_resolved": "git://github.com/lydell/sheet#13a8e6a1b10132d78c588bc84559ebb69cedf03c",
  "_from": "git://github.com/lydell/sheet#mine",
  "_fromGithub": true
}
